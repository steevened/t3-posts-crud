import Head from "next/head";
import { Avatar, AvatarFallback, AvatarImage } from "~/components/ui/avatar";

import { api } from "~/utils/api";

export default function Home() {
  const {
    data: posts,
    error,
    isError,
    isLoading,
  } = api.posts.getAll.useQuery();

  console.log(error);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="@container">
        <div className="mx-auto w-full max-w-lg">
          <ul className="space-y-5">
            {posts?.map((post) => (
              <li key={post.id}>
                <PostCard
                  content={post.content}
                  authorId={post.authorId}
                  createdAt={post.createdAt}
                />
              </li>
            ))}
          </ul>
        </div>
      </main>
    </>
  );
}

const PostCard = ({
  content,
  authorId,
  createdAt,
}: {
  content: string;
  authorId: string;
  createdAt: Date;
}) => {
  const { data: user } = api.users.getById.useQuery({ id: authorId });
  return (
    <div className="flex items-center gap-5 rounded border p-5">
      <Avatar>
        <AvatarImage src={user?.image ?? ""} />
        <AvatarFallback>{user?.name?.slice(0, 1)}</AvatarFallback>
      </Avatar>
      <div className=" w-full space-y-2.5">
        <div className="flex justify-between">
          <h3 className="text-sm text-muted-foreground">@{user?.name}</h3>
          <p className="text-sm text-muted-foreground">
            {new Date(createdAt).toLocaleDateString()}
          </p>
        </div>
        <p>{content}</p>
      </div>
    </div>
  );
};

// function AuthShowcase() {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined },
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// }
